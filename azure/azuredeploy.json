{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "gitBranch": {
      "type": "string",
      "defaultValue": "master",
      "allowedValues": [
        "master",
        "development"
      ]
    },
    "auxvmSshPublicKey": {
      "type": "string",
      "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDJoJu7pd69WA4qWeDw1dUMFceYNwsr7SqbVqvXxNvk5BqLANBHAvyZCnRd3qyjDozMzxjAR/6b0wT5YFermGcM7CPhMYFo7dxPzHZm4bBsp7whVnWLtxEq1dFoo+a7UN3sstxoIMuAcodBHUpSbI74am8TqYD8m9hY2bchOFy7aYKCCm1i3Z1jdf3lG214S/nFKGgVJtZtBf2BkkrrQ2Lxqm+Gt8ic9O57vj4YR9I7A437zaa7IB6q9CXAuEt9cJoa1EFM6CG/DDhAWduGtnowT/LpSIwtDB2wZg9uVMfUGB42ovE/Xp+C8UFWQu3cSod4QBPY2k8As653Mn0f9nf5",
      "metadata": {
        "description": "Configure all linux machines with the SSH public key string, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
      }
    },
    "auxvmSize": {
      "type": "string",
      "defaultValue": "Standard_B1s",
      "allowedValues": [
        "Standard_B1s",
        "Standard_B2s",
        "Standard_B2ms",
        "Standard_D2s_v3",
        "Standard_D2_v3",
        "Standard_DS2_v2",
        "Standard_D2_v2",
        "Standard_DS2",
        "Standard_D2",
        "Standard_A2_v2",
        "Standard_A2"
      ],
      "metadata": {
        "description": "The virutal machine size to use as AuxVM."
      }
    },
    "kubernetesVersion": {
      "type": "string",
      "defaultValue": "1.14.8",
      "allowedValues": [
        "1.15.5", 
        "1.14.8",
        "1.13.10"
      ],
      "metadata": {
        "description": "The version of the Kubernetes running in AKS."
      }
    },
    "kubernetesNodeSize": {
      "type": "string",
      "defaultValue": "Standard_A2m_v2",
      "allowedValues": [
        "Standard_B1ms",
        "Standard_B2s",
        "Standard_B2ms",
        "Standard_D2s_v3",
        "Standard_D2_v3",
        "Standard_DS2_v2",
        "Standard_D2_v2",
        "Standard_A2m_v2",
        "Standard_E2s_v3",
        "Standard_DS2",
        "Standard_D2",
        "Standard_A2_v2",
        "Standard_A2"
      ],
      "metadata": {
        "description": "The virutal machine size to use as kubernetes nodes. Added some smaller from https://docs.microsoft.com/en-us/azure/virtual-machines/linux/sizes-general"
      }
    },
    "kubernetesNodesCount": {
      "type": "int",
      "defaultValue": 2,
      "allowedValues": [ 1, 2, 3, 4, 5, 6, 7, 8 ],
      "metadata": {
        "description": "Nodes of the cluster explicated, good for devs.."
      }
    },
    "servicePrincipalAppId": {
      "type": "string",
      "defaultValue": "e82b2878-bdb3-449c-877d-100115361bde",
      "metadata": {
        "description": "Service Principal App ID (also called Client ID) that has contributor rights to the subscription used for this deployment. It is used by the Kubernetes cluster to dynamically manage resources (e.g. user-defined load balancers)."
      }
    },
    "servicePrincipalAppKey": {
      "type": "securestring",
      "defaultValue": "DB7Bpb4[It@L=Como0[JlryXxaMj8wjS",
      "metadata": {
        "description": "Service Principal App Key (also called Client Secret) that has contributor rights to the subscription used for this deployment. It is used by the Kubernetes cluster to dynamically manage resources (e.g. user-defined load balancers)."
      }
    },
    "acrSku": {
      "type": "string",
      "metadata": {
        "description": "Tier of your Azure Container Registry."
      },
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "jenkinsAdminPassword": {
      "type": "securestring",
      "defaultValue": "admin",
      "metadata": {
        "description": "Admin password for created Jenkins instance."
      }
    },
    "applicationGitUrl": {
      "type": "string",
      "defaultValue": "https://github.com/Huge/openshift-cicd-app",
      "metadata": {
        "description": "Application source GIT repository URL."
      }
    }
  },
  "variables": {
    "location": "[parameters('location')]",
    "adminUsername": "azureuser",
    "acrAdminUserEnabled": true,
    "acrName": "[concat('acr',uniqueString(resourceGroup().id))]",
    "resourcePrefix": "auxvm",
    "vmName": "[concat(variables('resourcePrefix'), '-vm')]",
    "bootstrapExtensionName": "[concat(variables('resourcePrefix'), '-bootstrap')]",
    "auxvmDeploymentName": "auxvm-deployment",
    "aksName": "aks-cluster",
    "aksDnsPrefix": "[concat('aks', uniqueString(resourceGroup().id))]",
    "artifactsLocation": "[concat('https://raw.githubusercontent.com/elos-tech/kubernetes-cicd/', parameters('gitBranch'), '/')]",
    "extensionScript": "bootstrap-wrapper.sh",
    "artifactsLocationSasToken": "",
    "customScriptTemplateUrl": "[uri(variables('artifactsLocation'), concat('azure/nested/customscript.json', variables('artifactsLocationSasToken')))]",
    "auxvmTemplateUrl": "[uri(variables('artifactsLocation'), concat('azure/nested/auxvm.json', variables('artifactsLocationSasToken')))]"
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "pid-4630972a-5ac5-5915-8130-b5fd5e7145e9",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "name": "[variables('auxvmDeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [ ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('auxvmTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sshPublicKey": {
            "value": "[parameters('auxvmSshPublicKey')]"
          },
          "virtualMachineSize": {
            "value": "[parameters('auxvmSize')]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        }
      }
    },
    {
      "name": "[variables('bootstrapExtensionName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "[variables('auxvmDeploymentName')]",
        "[resourceId('Microsoft.ContainerService/managedClusters', variables('aksName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('customScriptTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "extensionName": {
            "value": "[variables('bootstrapExtensionName')]"
          },
          "vmName": {
            "value": "[variables('vmName')]"
          },
          "fileUris": {
            "value": [
                "[concat(variables('artifactsLocation'), '/scripts/aks/', variables('extensionScript'), variables('artifactsLocationSasToken'))]"
            ]
          },
          "commandToExecute": {
            "value": "[concat('./', variables('extensionScript'), ' --app_id \"', parameters('servicePrincipalAppId'), '\" --app_key \"', parameters('servicePrincipalAppKey'), '\" --subscription_id \"', subscription().subscriptionId, '\" --tenant_id \"', subscription().tenantId, '\" --resource_group \"', resourceGroup().name, '\" --cluster_name \"', variables('aksName'), '\" --jenkins_admin_password \"', parameters('jenkinsAdminPassword'), '\" --application_git_url \"', parameters('applicationGitUrl'), '\" --registry_name \"', variables('acrName'), '\" --location \"', variables('location'), '\" --git_branch \"', parameters('gitBranch'), '\"')]"
          }
        }
      }
    },
    {
      "apiVersion": "2018-03-31",
      "type": "Microsoft.ContainerService/managedClusters",
      "name": "[variables('aksName')]",
      "location": "[variables('location')]",
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "dnsPrefix": "[variables('aksDnsPrefix')]",
        "enableRBAC": false,
        "agentPoolProfiles": [
          {
            "name": "agentpool",
            "count": "[parameters('kubernetesNodesCount')]",
            "vmSize": "[parameters('kubernetesNodeSize')]",
            "osType": "Linux",
            "storageProfile": "ManagedDisks",
            "storageTier": "Standard_LRS"
          }
        ],
        "linuxProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "ssh": {
            "publicKeys": [
              {
                "path": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
                "keyData": "[parameters('auxvmSshPublicKey')]"
              }
            ]
          }
        },
        "servicePrincipalProfile": {
          "ClientId": "[parameters('servicePrincipalAppId')]",
          "Secret": "[parameters('servicePrincipalAppKey')]"
        }
      },
      "dependsOn": [
      ]
    },
    {
      "name": "[variables('acrName')]",
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2017-10-01",
      "location": "[variables('location')]",
      "comments": "Container registry for storing docker images",
      "tags": {
        "displayName": "Container Registry",
        "container.registry": "[variables('acrName')]"
      },
      "sku": {
        "name": "[parameters('acrSku')]",
        "tier": "[parameters('acrSku')]"
      },
      "properties": {
        "adminUserEnabled": "[variables('acrAdminUserEnabled')]"
      }
    }
  ],
  "outputs": {
    "Jenkins url": {
      "value": "[concat('https://jenkins.', reference(variables('bootstrapExtensionName')).outputs.instanceView.value)]",
      "type": "string"
    },
    "Sonarqube url": {
      "value": "[concat('https://sonarqube.', reference(variables('bootstrapExtensionName')).outputs.instanceView.value)]",
      "type": "string"
    },
    "Nexus url": {
      "value": "[concat('https://nexus.', reference(variables('bootstrapExtensionName')).outputs.instanceView.value)]",
      "type": "string"
    },
    "Application dev url": {
      "value": "[concat('https://application-dev.', reference(variables('bootstrapExtensionName')).outputs.instanceView.value)]",
      "type": "string"
    },
    "Application prod url": {
      "value": "[concat('https://application-prod.', reference(variables('bootstrapExtensionName')).outputs.instanceView.value)]",
      "type": "string"
    },
    "Auxvm ssh connection command": {
      "type": "string",
      "value": "[concat('ssh ', variables('adminUsername'), '@', reference(variables('auxvmDeploymentName')).outputs.auxvmFqdn.value)]"
    },
    "Authenticate kubectl tool via az CLI": {
      "type": "string",
      "value": "[concat('az aks get-credentials --resource-group ', resourceGroup().name, ' --name ', variables('aksName'), ' --admin')]"
    },
    
    "Kubernetes master fqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('aksName'))).fqdn]"
    },
    "ACR fqdn": {
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries',variables('acrName')),'2017-10-01').loginServer]",
      "type": "string"
    }
  }
}
